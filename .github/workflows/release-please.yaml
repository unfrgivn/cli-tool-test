name: release-please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: googleapis/release-please-action@v4
        id: release

      # Get release without the leading 'v'
      - name: Get release version
        run: |
          VERSION=${{ steps.release.outputs.tag_name }}
          echo "VERSION=${VERSION:1}" >> $GITHUB_ENV

      - name: Upload package artifact
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PACKAGE_ARCHIVE_DARWIN_ARM64=${{ github.event.repository.name }}-${{ env.VERSION }}-darwin-arm64.tar.gz 
          mv ./test.tar.gz ./${PACKAGE_ARCHIVE_DARWIN_ARM64}
          gh release upload ${{ steps.release.outputs.tag_name }} ./${PACKAGE_ARCHIVE_DARWIN_ARM64}

      - name: Release my project to my Homebrew tap
        # uses: Justintime50/homebrew-releaser@v1
        uses: unfrgivn/homebrew-releaser@main
         # This only occurs when a new release is created
        if: ${{ steps.release.outputs.release_created }}
        with:
          # The name of the homebrew tap to publish your formula to as it appears on GitHub.
          homebrew_owner: unfrgivn
          homebrew_tap: homebrew-packages

          # The name of the folder in your homebrew tap where formula will be committed to.
          formula_folder: formula

          # The Personal Access Token (saved as a repo secret) that has `repo` permissions for the repo running the action AND Homebrew tap you want to release to.
          github_token: ${{ secrets.HOMEBREW_RELEASER_GH_TOKEN }}

          # Git author info used to commit to the homebrew tap.
          commit_owner: ${{ github.actor }}
          commit_email: ${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com

          # Custom dependencies in case other formulas are needed to build the current one.
          # Optional - multiline string
          # depends_on: |
          #   "bash" => :build
          #   "gcc"

          # Custom install command for your formula.
          # Required - string
          install: |                
              # Install main script as alias wp
              bin.install "bin/test-app" => "testapp" 

          # Allows you to set a custom download strategy. Note that you'll need
          # to implement the strategy and add it to your tap repository.
          # Example: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
          # download_strategy: GitHubPrivateRepositoryReleaseAssetDownloadStrategy

          # Allows you to add a custom require_relative at the top of the formula template.
          custom_require: ../lib/custom_download_strategy

          # Adds URL and checksum targets for different OS and architecture pairs. Using this option assumes 
          # a tar archive exists on your GitHub repo with the following URL pattern (this cannot be customized):
          # https://github.com/{GITHUB_OWNER}/{REPO_NAME}/releases/download/{TAG}/{REPO_NAME}-{VERSION}-{OPERATING_SYSTEM}-{ARCHITECTURE}.tar.gz'
          # Darwin AMD pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-darwin-amd64.tar.gz
          # Linux ARM pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-linux-arm64.tar.gz
          target_darwin_amd64: false
          target_darwin_arm64: true
          target_linux_amd64: false
          target_linux_arm64: false

          # Skips committing the generated formula to a homebrew tap (useful for local testing).
          skip_commit: false

          # Logs debugging info to console.
          debug: true